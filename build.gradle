plugins {
  // use launch4j to build a native .exe for Windows
  id 'edu.sc.seis.launch4j' version '2.4.4'
}

// java plugin is required for e.g. compilation, the application plugin is used to execute the game via gradle
apply plugin: 'java'
apply plugin: 'application'

// give your project a name
archivesBaseName = "SERVUS BONUS"
version = "v1.0.0"
targetCompatibility = "1.8.0"
mainClassName = "de.gurkenlabs.ldjam44.Program"

repositories {
  mavenCentral()
}

dependencies {
  compile project(':litiengine')
}

sourceSets {
  main.java.srcDir "src"
  main.resources.srcDirs = ["sprites", "audio", "maps", "misc"]
}

jar {
  // include everything from the litiengine and referenced libraries in the jar
  from {
    configurations.runtime.collect {
      it.isDirectory() ? it : zipTree(it)
    }
    configurations.compile.collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }  {
     exclude 'META-INF/services/**'
  }
  
  // make sure to only include service providers from the litiengine when directly referencing the project
  from ("${project(':litiengine').projectDir}/resources/") {
    include 'META-INF/services/**'
  }
  
  // exclude the natives: they will be included in the distribution archive
  exclude '**/*.dll'
  exclude '**/*.jnilib'
  exclude '**/*.dylib'
  exclude '**/*.so'
  exclude 'junit**/**'
  
  from 'game.litidata'
  
  manifest {
    attributes 'Class-Path': '.',
               'Main-Class': mainClassName
  }
}

launch4j {
  mainClassName = mainClassName
  icon = 'game.ico'
  outputDir = 'libs'
  outfile = archivesBaseName +'.exe'
  companyName = 'gurkenlabs.de'
  version = '1.0.0'
  textVersion = '1.0.0'
  copyright = '2019 gurkenlabs.de'
  bundledJrePath = 'jre'
  jvmOptions = ['-Xms256m', '-Xmx1024m']
  cmdLine = '-release'
}

task copyDistributionFiles(type: Copy) {
  def buildFolder = new File(buildDir, 'libs')
  
  from('litiengine/build/libs') {
   include '**/*'
   exclude '**/*.jar'
   exclude '**/*.zip'
   exclude 'LICENSE'
   exclude 'lib/**'
  }
  
  from('dist'){
    include 'game.ico'
    include 'config.properties'
    include 'jre/**'
  }
  
  into buildFolder
}

build.dependsOn copyDistributionFiles